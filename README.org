#+TITLE: Borg Backup Exclusion Lists for macOS
#+AUTHOR: Sterling Hooten
#+DATE: 
#+CREATED: [2022-10-25 Tue 22:34]
#+MODIFIED: 
#+FILETAGS:
* Introduction
=Borg backup= is an open source software project providing deduplication, encryption, and compression. Not all files which are present on a machine should be copied to the backup system (e.g. caches, metadata stores). Files or directories which should be ignored during backup are specified using "exclusion lists" or "patterns" which are then fed into =borg=. Unfortunately macOS has many peculiarities not present in standard *nix distributions which makes crafting a sensible list difficult, furthermore these can change with each OS update.

The purpose of this repository is to collect an annotated list of exclusion rules tailored to the macOS environment that can be shared and critiqued among the community. Ideally there's a  universally agreed upon "core" set of exclusions which can be used in all situations for macOS, and then suggested exclusions available as addenda.
* Installation
Clone this repo or copy the exclusion files to the machine which is going to run borg backup.
* Usage
Run =borg create= with =--patterns-from=/path/to/borg-exclude.txt=
#+caption: Example borg command using the exclusion list
#+begin_example sh
borg create --list --exclude-if-present .nobackup --patterns-from=/Users/exampleuser/sysadmin/borg-exclude.txt abc123@abc123.rysnc.net:example/directory::'{hostname}-{utcnow} /
#+end_example
* Why exclude certain items?
Although it might seem like copying /all/ items from a machine would be the ideal case, these can create problems on recovery or unduly slow down the backup process. The wallclock time to perform a backup is strongly correlated with the number of files that need to be traversed, so omitting unnecessary directors can significantly speed up backups.

Excluding these files leads to faster backups, less storage use/churn, and easier recoveries.
* Roadmap
I'm starting with the core items that should be excluded in any situation, but there are many additional files which are reasonable to exclude for most situations, and even more which can be overlooked if the goal is speed/frequency rather than completeness. I plan to add these in as optional configurations later.
* How to help
- Create bug reports if you find something included that should be excluded (or the converse)
- Include commentary about risk or failure
- Add or correct annotations
- Collect and post timing data for traversing certain file paths
- Suggest changes to this README file
- Link to this repository in stack exchange, blogs, and reddit posts
